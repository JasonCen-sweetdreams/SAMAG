Distributed graph databases have become increasingly popular for storing and querying large-scale graph data. However, query optimization remains a significant challenge due to the complexity of graph queries and the need to minimize communication overhead. This paper presents a novel query optimization framework, 'GraphOpt', which leverages a combination of graph partitioning, query rewriting, and cost-based optimization to improve query performance. We implement GraphOpt on top of a popular distributed graph database and demonstrate its effectiveness in reducing query latency and improving throughput on a range of graph workloads.