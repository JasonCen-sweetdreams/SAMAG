The increasing volume and velocity of data in distributed database systems necessitate efficient indexing mechanisms for secondary storage. This paper proposes a novel indexing approach, 'SSTree', which leverages a hybrid combination of B-tree and LSM-tree structures to minimize I/O overhead and optimize query performance. Our evaluation on a real-world dataset demonstrates that SSTree outperforms existing indexing techniques by up to 30% in terms of query latency and storage efficiency. We also provide a detailed analysis of the trade-offs between SSTree and existing indexing methods.