Materialized views are crucial for real-time data analytics in distributed databases. However, maintaining up-to-date views in the presence of frequent updates and inserts poses significant performance challenges. This paper proposes a novel indexing technique, 'HyperTree', which exploits the hierarchical structure of distributed databases to efficiently maintain materialized views. HyperTree leverages a combination of in-memory caching and disk-based storage to minimize query latency and reduce update overhead. Experimental results on a real-world distributed database setup demonstrate that HyperTree outperforms existing indexing approaches by up to 30% in terms of query response time and 25% in terms of update throughput.