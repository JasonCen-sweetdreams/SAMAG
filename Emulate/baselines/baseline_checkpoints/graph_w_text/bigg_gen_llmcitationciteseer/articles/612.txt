Distributed database systems suffer from query performance variability due to node heterogeneity, network latency, and data skew. This paper proposes a novel approach to optimize query performance using multi-arm bandits (MAB). We formulate the problem as a MAB problem, where each arm represents a query execution plan, and the reward is the query execution time. Our algorithm, 'DBExplorer', uses epsilon-greedy exploration to balance exploitation and exploration, adapting to changing system conditions. Experimental results on a real-world distributed database system show that DBExplorer outperforms state-of-the-art query optimizers by up to 30% in terms of query execution time.