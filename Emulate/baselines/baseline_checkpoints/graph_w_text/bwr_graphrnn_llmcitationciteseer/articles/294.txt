Query optimization is a crucial component of relational database systems, as it directly impacts query performance and overall system efficiency. However, traditional optimization techniques often struggle to keep up with the complexity and scale of modern distributed databases. This paper proposes a novel approach to query optimization using reinforcement learning, where the optimizer learns to navigate the vast space of possible execution plans through trial and error. We design a custom reward function that incorporates both query latency and resource utilization, and demonstrate significant performance improvements on a real-world distributed database benchmark. Our approach is scalable, flexible, and adaptable to changing workload patterns.