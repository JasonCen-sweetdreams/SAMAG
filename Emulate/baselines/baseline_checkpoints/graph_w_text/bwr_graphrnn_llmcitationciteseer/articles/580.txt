Distributed databases have become ubiquitous in modern computing, but ensuring consistency and concurrency control remains a significant challenge. We present 'DynaLock', a novel concurrency control protocol that combines optimistic locking with transactional re-execution to minimize aborts and improve system throughput. Our approach dynamically adjusts the locking granularity based on transaction conflict rates, reducing lock contention and wait times. Evaluation on a distributed database benchmark shows that DynaLock outperforms existing protocols, achieving up to 30% higher throughput and 25% lower latency.