Distributed graph databases have become increasingly popular for storing and querying large-scale graph data. However, query performance is often bottlenecked by the high latency of remote data access. To address this issue, we propose an adaptive caching framework, 'GraphCache', which dynamically adjusts the cache size and content based on query patterns and data access frequencies. Our experiments on a real-world social network dataset show that GraphCache achieves an average query speedup of 3.5x compared to traditional caching mechanisms, while reducing the average cache miss rate by 40%. We also provide a theoretical analysis of the cache hit rate and query performance, demonstrating the effectiveness of our approach.